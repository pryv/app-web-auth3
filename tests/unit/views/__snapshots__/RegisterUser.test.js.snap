// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterUser.test.js renders correctly (snapshots matching) 1`] = `
<div>
  <h1>
    Register a new user
  </h1>
   
  <v-form-stub
    id="registerForm"
  >
    <v-text-field-stub
      id="email"
      label="E-mail"
      rules="function required(value) {
          return !!value || 'This field is required.';
        },function email(value) {
          return (/.+@.+/.test(value) || 'E-mail must be valid.'
          );
        }"
      value=""
    />
     
    <v-text-field-stub
      id="username"
      label="Username"
      rules="function required(value) {
          return !!value || 'This field is required.';
        }"
      value=""
    />
     
    <password-stub
      confirmation="true"
      value=""
    />
     
    <v-autocomplete-stub
      allowoverflow="true"
      appendicon="$vuetify.icons.dropdown"
      backgroundcolor=""
      browserautocomplete="off"
      clearicon="$vuetify.icons.clear"
      color="primary"
      errorcount="1"
      errormessages=""
      filter="function _default(item, queryText, itemText) {
                return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
            }"
      id="hosting"
      itemavatar="avatar"
      itemdisabled="disabled"
      items=""
      itemtext="text"
      itemvalue="value"
      label="Hosting"
      menuprops="[object Object]"
      messages=""
      nodatatext="$vuetify.noDataText"
      placeholder="Choose hosting..."
      rules="function required(value) {
          return !!value || 'This field is required.';
        }"
      successmessages=""
      type="text"
      value=""
      valuecomparator="function deepEqual(a, b) {
    if (a === b) return true;
    if (a instanceof Date && b instanceof Date) {
        // If the values are Date, they were convert to timestamp with getTime and compare it
        if (a.getTime() !== b.getTime()) return false;
    }
    if (a !== Object(a) || b !== Object(b)) {
        // If the values aren't objects, they were already checked for equality
        return false;
    }
    var props = Object.keys(a);
    if (props.length !== Object.keys(b).length) {
        // Different number of props, don't bother to check
        return false;
    }
    return props.every(function (p) {
        return deepEqual(a[p], b[p]);
    });
}"
    />
     
    <v-btn-stub
      activeclass="v-btn--active"
      disabled="true"
      id="submitButton"
      tag="button"
      type="button"
    >
      Create
    </v-btn-stub>
     
    <v-btn-stub
      activeclass="v-btn--active"
      id="clearButton"
      tag="button"
      type="button"
    >
      Clear
    </v-btn-stub>
     
    <div>
      
      By registering you agree with our
      
      <a
        href="https://pryv.com/terms-of-use/"
        target="_blank"
      >
        
      terms of use
      </a>
      .
    
    </div>
  </v-form-stub>
   
  <!---->
   
  <alerts-stub
    errormsg=""
    successmsg=""
  />
</div>
`;
